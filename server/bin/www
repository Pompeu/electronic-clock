#!/usr/bin/env node
'use strict';

const debug   = require('debug')('server');
const cluster = require('cluster');
const http    = require('http');
const numCPUs = require('os').cpus().length;
const app     = require('../app');
const db      = require('../models');
const port    = process.env.PORT || 3000;

app.set('port', port);

let sync_option = {};

if ((process.env.NODE_ENV === 'development') || (process.env.NODE_ENV === 'test')) {
  sync_option = {force: true};
}

if (cluster.isMaster) {
  db.sequelize.sync(sync_option).then(function () {
    for (let i = 0; i < numCPUs; i++) {
      cluster.fork();
    }

    cluster.on('exit', (worker, code, signal) => {
      debug('worker ' + worker.process.pid + ' died');
      debug('code ' + code);
      debug('signal' + signal);
    });
  });
} else {
  const server = http.createServer(app);

  server.listen(port);
  server.on('listening', () => {
    debug('Express server listening on port ' + server.address().port);
  });
  server.on('error', err => {
    debug('error' + err);
  });
}
